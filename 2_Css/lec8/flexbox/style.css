.container{
    border: 2px solid red;
    display: flex;
    height: 80vh;
    justify-content: space-between;
    align-items: center;
    /* flex-direction: column; */
    flex-wrap: wrap;
    /* align-content: flex-start; */
}

.box{
    height: 100px;
    width: 100px;
    border: 1px solid goldenrod;
    margin: 4px;
    background-color: violet;
}

/* Notes:

    - Always give flex property to the container of the items, not to items.

    - justify content works as a horizontally
    - align items works as a vertically
    - flex-direction will direct the items.

    but the thing is, when you use flex-direction as column, it will change the axis as main axis will be vertically and cross axis to horizantally. just check out the mdn docs for more calrity.

    and what the fuck flex-wrap do? 
    - flex wrap helps to wrap the items. for eg: if you want to show a gallery and in mobile version you need to vertically align it. so, with the help of flex-wrap: wrap, you can wrap the items on any responsive design.

    align content?
    - if we have more than 1 row, then we use align-content. 


    gap?
    - gap used to space between the items.
    row-gap, column-gap.

    // Item Property

    align-self, felx-grow, flex-shrink, order.



    // Various types of selectors

    .box:first-child {

    background-color: blue
}

similarly their are, .box::first-line;
 .boxes *{};
  p,a, .box, [data-color = 'primary']{}
  .box:nth-child(even);
  .boxes::before{
  content: "sigma course"   
} // pseudo elements.

::selection
.box::first-letter{}


*/